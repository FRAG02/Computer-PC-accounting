{"ast":null,"code":"const __API_PATH = \"http://project.loc/\";\nconst fetchData = async (url, method = \"GET\", body = null) => {\n  const options = {\n    method\n  };\n  if (body && method !== 'GET') {\n    if (body instanceof FormData) {\n      options.body = body;\n    } else {\n      options.body = JSON.stringify(body);\n    }\n  }\n  let fullUrl = `${__API_PATH}${url}`;\n  if (method === 'GET' && body) {\n    const params = new URLSearchParams(body);\n    fullUrl += `?${params.toString()}`;\n  }\n  const response = await fetch(fullUrl, options);\n  return response.json();\n};\nexport const login = async (username, password) => fetchData('login', \"POST\", {\n  username,\n  password\n});\nexport const getDepartments = setFunc => async () => fetchData('get-departments').then(data => setFunc(data));\nexport const getMOLs = setFunc => async () => fetchData('get-mols').then(data => setFunc(data));\nexport const getEquipment = setFunc => async () => fetchData('get-equipment').then(data => setFunc(data));","map":{"version":3,"names":["__API_PATH","fetchData","url","method","body","options","FormData","JSON","stringify","fullUrl","params","URLSearchParams","toString","response","fetch","json","login","username","password","getDepartments","setFunc","then","data","getMOLs","getEquipment"],"sources":["C:/OSPanel/home/project.loc/frontend/src/services/api.js"],"sourcesContent":["const __API_PATH = \"http://project.loc/\"\r\n\r\nconst fetchData = async (url, method = \"GET\", body = null) => {\r\n    const options = {\r\n        method,\r\n    };\r\n\r\n    if (body && method !== 'GET') {\r\n        if (body instanceof FormData) {\r\n            options.body = body;\r\n        } else {\r\n            options.body = JSON.stringify(body);\r\n        }\r\n    }\r\n\r\n    let fullUrl = `${__API_PATH}${url}`;\r\n    if (method === 'GET' && body) {\r\n        const params = new URLSearchParams(body);\r\n        fullUrl += `?${params.toString()}`;\r\n    }\r\n\r\n    const response = await fetch(fullUrl, options)\r\n    return response.json();\r\n};\r\n\r\n\r\n\r\nexport const login = async (username, password) => fetchData('login', \"POST\", { username, password });\r\nexport const getDepartments = (setFunc) => async () => fetchData('get-departments').then(data => setFunc(data));\r\nexport const getMOLs = (setFunc) => async () => fetchData('get-mols').then(data => setFunc(data));\r\nexport const getEquipment = (setFunc) => async () => fetchData('get-equipment').then(data => setFunc(data));"],"mappings":"AAAA,MAAMA,UAAU,GAAG,qBAAqB;AAExC,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC1D,MAAMC,OAAO,GAAG;IACZF;EACJ,CAAC;EAED,IAAIC,IAAI,IAAID,MAAM,KAAK,KAAK,EAAE;IAC1B,IAAIC,IAAI,YAAYE,QAAQ,EAAE;MAC1BD,OAAO,CAACD,IAAI,GAAGA,IAAI;IACvB,CAAC,MAAM;MACHC,OAAO,CAACD,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IACvC;EACJ;EAEA,IAAIK,OAAO,GAAG,GAAGT,UAAU,GAAGE,GAAG,EAAE;EACnC,IAAIC,MAAM,KAAK,KAAK,IAAIC,IAAI,EAAE;IAC1B,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAACP,IAAI,CAAC;IACxCK,OAAO,IAAI,IAAIC,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE;EACtC;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAEJ,OAAO,CAAC;EAC9C,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;AAID,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAKjB,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE;EAAEgB,QAAQ;EAAEC;AAAS,CAAC,CAAC;AACrG,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAK,YAAYnB,SAAS,CAAC,iBAAiB,CAAC,CAACoB,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACE,IAAI,CAAC,CAAC;AAC/G,OAAO,MAAMC,OAAO,GAAIH,OAAO,IAAK,YAAYnB,SAAS,CAAC,UAAU,CAAC,CAACoB,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACE,IAAI,CAAC,CAAC;AACjG,OAAO,MAAME,YAAY,GAAIJ,OAAO,IAAK,YAAYnB,SAAS,CAAC,eAAe,CAAC,CAACoB,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACE,IAAI,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}